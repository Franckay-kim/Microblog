2023-12-19 22:50:15,244 INFO: Microblog startup [in C:\Users\user\Microblog\app\__init__.py:87]
2023-12-19 22:51:46,237 ERROR: Exception on /auth/reset_password_request [POST] [in C:\Users\user\Microblog\venv\Lib\site-packages\flask\app.py:825]
Traceback (most recent call last):
  File "C:\Users\user\Microblog\venv\Lib\site-packages\wtforms\validators.py", line 401, in __call__
    import email_validator
ModuleNotFoundError: No module named 'email_validator'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\user\Microblog\venv\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\app\auth\routes.py", line 62, in reset_password_request
    if form.validate_on_submit():
       ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\flask_wtf\form.py", line 86, in validate_on_submit
    return self.is_submitted() and self.validate(extra_validators=extra_validators)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\wtforms\form.py", line 329, in validate
    return super().validate(extra)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\wtforms\form.py", line 146, in validate
    if not field.validate(self, extra):
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\wtforms\fields\core.py", line 246, in validate
    stop_validation = self._run_validation_chain(form, chain)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\wtforms\fields\core.py", line 266, in _run_validation_chain
    validator(form, self)
  File "C:\Users\user\Microblog\venv\Lib\site-packages\wtforms\validators.py", line 403, in __call__
    raise Exception(
Exception: Install 'email_validator' for email validation support.
2023-12-19 22:53:19,643 INFO: Microblog startup [in C:\Users\user\Microblog\app\__init__.py:87]
2023-12-19 22:56:05,561 ERROR: Exception on /index [POST] [in C:\Users\user\Microblog\venv\Lib\site-packages\flask\app.py:825]
Traceback (most recent call last):
  File "C:\Users\user\Microblog\venv\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\flask_login\utils.py", line 290, in decorated_view
    return current_app.ensure_sync(func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\app\main\routes.py", line 37, in index
    db.session.commit()
  File "C:\Users\user\Microblog\venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 598, in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1969, in commit
    trans.commit(_to_root=True)
  File "<string>", line 2, in commit
  File "C:\Users\user\Microblog\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1266, in commit
    self.session.dispatch.after_commit(self.session)
  File "C:\Users\user\Microblog\venv\Lib\site-packages\sqlalchemy\event\attr.py", line 378, in __call__
    fn(*args, **kw)
  File "C:\Users\user\Microblog\app\models.py", line 40, in after_commit
    add_to_index(obj.__tablename__, obj)
  File "C:\Users\user\Microblog\app\search.py", line 10, in add_to_index
    current_app.elasticsearch.index(index=index, id=model.id, document=payload)
  File "C:\Users\user\Microblog\venv\Lib\site-packages\elasticsearch\_sync\client\utils.py", line 402, in wrapped
    return api(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\elasticsearch\_sync\client\__init__.py", line 2249, in index
    return self.perform_request(  # type: ignore[return-value]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\elasticsearch\_sync\client\_base.py", line 285, in perform_request
    meta, resp_body = self.transport.perform_request(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\elastic_transport\_transport.py", line 328, in perform_request
    meta, raw_data = node.perform_request(
                     ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\elastic_transport\_node\_http_urllib3.py", line 202, in perform_request
    raise err from None
elastic_transport.ConnectionError: Connection error caused by: ConnectionError(Connection error caused by: NewConnectionError(<urllib3.connection.HTTPConnection object at 0x000002702CE31850>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it))
2023-12-19 22:57:16,533 ERROR: Exception on /index [POST] [in C:\Users\user\Microblog\venv\Lib\site-packages\flask\app.py:825]
Traceback (most recent call last):
  File "C:\Users\user\Microblog\venv\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\flask_login\utils.py", line 290, in decorated_view
    return current_app.ensure_sync(func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\app\main\routes.py", line 37, in index
    db.session.commit()
  File "C:\Users\user\Microblog\venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 598, in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1969, in commit
    trans.commit(_to_root=True)
  File "<string>", line 2, in commit
  File "C:\Users\user\Microblog\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1266, in commit
    self.session.dispatch.after_commit(self.session)
  File "C:\Users\user\Microblog\venv\Lib\site-packages\sqlalchemy\event\attr.py", line 378, in __call__
    fn(*args, **kw)
  File "C:\Users\user\Microblog\app\models.py", line 40, in after_commit
    add_to_index(obj.__tablename__, obj)
  File "C:\Users\user\Microblog\app\search.py", line 10, in add_to_index
    current_app.elasticsearch.index(index=index, id=model.id, document=payload)
  File "C:\Users\user\Microblog\venv\Lib\site-packages\elasticsearch\_sync\client\utils.py", line 402, in wrapped
    return api(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\elasticsearch\_sync\client\__init__.py", line 2249, in index
    return self.perform_request(  # type: ignore[return-value]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\elasticsearch\_sync\client\_base.py", line 285, in perform_request
    meta, resp_body = self.transport.perform_request(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\elastic_transport\_transport.py", line 328, in perform_request
    meta, raw_data = node.perform_request(
                     ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\user\Microblog\venv\Lib\site-packages\elastic_transport\_node\_http_urllib3.py", line 202, in perform_request
    raise err from None
elastic_transport.ConnectionError: Connection error caused by: ConnectionError(Connection error caused by: NewConnectionError(<urllib3.connection.HTTPConnection object at 0x000002702CE3F5F0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it))
